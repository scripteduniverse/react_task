{"version":3,"sources":["contexts/CartContext.tsx","contexts/RateContext.tsx","Good.tsx","Group.tsx","contexts/GoodsContext.tsx","Goods.tsx","CartItem.tsx","Cart.tsx","App.tsx","index.tsx"],"names":["CartContext","React","createContext","useCart","useContext","CartProvider","children","useState","cart","setCart","Provider","value","RateContext","useRate","RateProvider","rate","setRate","useEffect","fetchRate","a","fetch","response","json","setInterval","Good","memo","good","prevPrice","ref","useRef","current","usePrevious","addToCart","useCallback","prev","item","find","name","arr","filter","amount","className","inStock","classNames","price","toFixed","onClick","Group","group","groupName","items","length","map","index","key","GoodsContext","useGoods","GoodsProvider","goods","setGoods","Goods","fetchGoods","data","CartItem","displayAmount","i","type","onChange","e","target","copy","forEach","obj","findPrice","Cart","cartItem","total","j","calculateSum","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a95b714.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { IGoodCart } from '../interfaces';\r\n\r\n// Defining type for Context\r\ntype CartContextType = {\r\n    cart: IGoodCart[],\r\n    setCart: React.Dispatch<React.SetStateAction<IGoodCart[]>>\r\n}\r\n\r\nexport const CartContext = React.createContext<CartContextType | null>(null);\r\n\r\n// Creating simple custom hook to use context more aesthetically \r\nexport const useCart = (): CartContextType | null => React.useContext(CartContext);\r\n\r\nexport const CartProvider: React.FC = ({ children }) => {\r\n    const defaultCart: IGoodCart[] = [];\r\n\r\n    // Creating state which will hold values for context\r\n    const [cart, setCart] = useState(defaultCart);\r\n    return (\r\n        <CartContext.Provider value={{cart, setCart}}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\ntype RateContextType = {\r\n    rate: number,\r\n    setRate: React.Dispatch<React.SetStateAction<number>>\r\n}\r\n\r\nexport const RateContext = React.createContext<RateContextType | null>(null);\r\nexport const useRate = (): RateContextType | null => React.useContext(RateContext);\r\n\r\nexport const RateProvider: React.FC = ({ children }) => {\r\n    const defaultRate: number = 30;\r\n    const [rate, setRate] = useState(defaultRate);\r\n\r\n    useEffect(() => {\r\n        const fetchRate = async () => {\r\n            const response = await fetch('/rate');\r\n            const rate = await response.json();\r\n            setRate(rate);\r\n        };\r\n        fetchRate();\r\n        setInterval(fetchRate, 15000);\r\n    }, []);\r\n\r\n    return (\r\n        <RateContext.Provider value={{rate, setRate}}>\r\n            {children}\r\n        </RateContext.Provider>\r\n    )\r\n}","import React, { useCallback, useRef, memo, useEffect } from 'react';\r\nimport { IGood, IGoodCart } from './interfaces';\r\nimport { useCart } from './contexts/CartContext';\r\nimport classNames from 'classnames';\r\nimport { useRate } from './contexts/RateContext';\r\n\r\ninterface IProps {\r\n    good: IGood\r\n}\r\n\r\nconst Good: React.FC<IProps> = memo(({ good }) => {\r\n\r\n    const { setCart } = useCart()!;\r\n    const { rate } = useRate()!;\r\n    const prevPrice = usePrevious(rate);\r\n\r\n    // Custom hook to store previous value of currency rate in order to compare it later\r\n    function usePrevious(value: number) {\r\n        const ref = useRef<number>();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    const addToCart = useCallback(() => {\r\n        setCart((prev: IGoodCart[]) => {\r\n            const item = prev.find(item => item.name === good.name);\r\n            const arr = prev.filter(item => item.name !== good.name);\r\n            return [...arr, item ? { ...item, amount: item.amount! + 1 } : { ...good, amount: 1 }];\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className='good'>\r\n            <div>\r\n                <p className='name'>{good.name}<span>({good.inStock})</span></p>\r\n                <p className={classNames({\r\n                    'red-text': rate > prevPrice!,\r\n                    'green-text': rate < prevPrice!,\r\n                    'black-text': rate == prevPrice!\r\n                })}>{(good.price * rate).toFixed()} руб.</p>\r\n            </div>\r\n            <button className='waves-effect waves-light btn' onClick={addToCart}>Добавить в корзину</button>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Good;\r\n","import React from 'react';\r\nimport Good from './Good';\r\nimport { IGroup} from './interfaces';\r\n\r\ninterface IProps {\r\n    group: IGroup\r\n}\r\n\r\nconst Group: React.FC<IProps> = ({ group }) => {\r\n    return (\r\n        <div className='group'>\r\n            <h4>{group.groupName}</h4>\r\n            <div>\r\n                {\r\n                    !group.items.length ? <p>Товаров данной группы нет в наличии</p> : group.items.map((good, index) => <Good good={good} key={index} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Group;","import React, { useState } from 'react';\r\nimport { IGroup } from '../interfaces';\r\n\r\n\r\ntype GoodsContextType = {\r\n    goods: IGroup[],\r\n    setGoods: React.Dispatch<React.SetStateAction<IGroup[]>>\r\n}\r\n\r\nexport const GoodsContext = React.createContext<GoodsContextType | null>(null);\r\nexport const useGoods = (): GoodsContextType | null => React.useContext(GoodsContext);\r\n\r\nexport const GoodsProvider: React.FC = ({ children }) => {\r\n    const defaultGoods: IGroup[] = [];\r\n    const [goods, setGoods] = useState(defaultGoods);\r\n    return (\r\n        <GoodsContext.Provider value={{goods, setGoods}}>\r\n            {children}\r\n        </GoodsContext.Provider>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport Group from './Group';\r\nimport { IGroup } from './interfaces';\r\nimport { useGoods } from './contexts/GoodsContext';\r\n\r\nconst Goods: React.FC = () => {\r\n\r\n    const { goods, setGoods} = useGoods()!;\r\n\r\n    useEffect(() => {\r\n        const fetchGoods = async () => {\r\n            const response = await fetch('/goods');\r\n            const data = await response.json();\r\n            setGoods(data);\r\n        };\r\n\r\n        fetchGoods();\r\n\r\n        // fetching goods from server every 15 seconds\r\n        setInterval(fetchGoods, 15000);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2 className = 'goods-heading'>Товары</h2>\r\n            {\r\n                goods.map((group: IGroup, index: number) => <Group group={group}  key={index}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Goods;\r\n","import React, { ChangeEvent, useRef, MutableRefObject } from 'react';\r\nimport { IGoodCart } from './interfaces';\r\nimport { useCart } from './contexts/CartContext';\r\nimport { useGoods } from './contexts/GoodsContext';\r\nimport { useRate } from './contexts/RateContext';\r\n\r\ninterface IProps {\r\n    item: IGoodCart\r\n}\r\n\r\nconst CartItem: React.FC<IProps> = ({ item }) => {\r\n\r\n    const { cart, setCart } = useCart()!;\r\n    const { rate } = useRate()!;\r\n    const { goods } = useGoods()!;\r\n\r\n    const deleteFromCart = () => {\r\n        setCart((prev) => {\r\n            return prev.filter(good => good.name !== item.name);\r\n        })\r\n    };\r\n\r\n    const changeItemAmount = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setCart((prev) => {\r\n            const copy = [...prev];\r\n            copy.forEach(a => {\r\n                if (a.name === item.name) {\r\n                    if (+value === 0) a.amount = 1\r\n                    else a.amount = +value\r\n\r\n                }\r\n            })\r\n            return copy;\r\n        })\r\n    }\r\n\r\n    const findPrice = () => {\r\n        let price: number = 0;\r\n        for (let i of goods) {\r\n            const obj = i.items.find(a => a.name === item.name)\r\n            if (obj) {\r\n                price = obj.price;\r\n                break;\r\n            }\r\n        }\r\n        return price;\r\n    }\r\n\r\n    const displayAmount = () => {\r\n        return cart.find(i => i.name === item.name)?.amount;\r\n    }\r\n\r\n    const errorHandler = () => {\r\n        if (displayAmount()! > item.inStock) return true\r\n        return false\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{item.name}</td>\r\n            <td>\r\n                <input\r\n                    type='number'\r\n                    value={displayAmount()}\r\n                    onChange={changeItemAmount}\r\n                />\r\n                {\r\n                    errorHandler() ? <p className='red'>Количество ограничено</p> : null\r\n                }\r\n            </td>\r\n            <td >{(findPrice() * rate).toFixed()} руб./шт</td>\r\n            <td><button className='waves-effect waves-light btn-small red button-delete' onClick={deleteFromCart}>Удалить</button></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\nimport { useCart } from './contexts/CartContext';\r\nimport { useGoods } from './contexts/GoodsContext';\r\nimport CartItem from './CartItem';\r\nimport { useRate } from './contexts/RateContext';\r\n\r\nconst Cart = () => {\r\n\r\n    // I am using ! sign after custom hook to make compiler sure that it does not return null\r\n    const { cart } = useCart()!;\r\n    const { goods } = useGoods()!;\r\n    const {rate} = useRate()!;\r\n\r\n    const calculateSum = () => {\r\n        let total: number = 0;\r\n        for (let i of goods) {\r\n            for (let j of cart) {\r\n                for (let a of i.items) {\r\n                    if (a.name == j.name) total += a.price * j.amount\r\n                }\r\n            }\r\n        };\r\n        return total * rate;\r\n    };\r\n\r\n    return (\r\n        <div className='cart-container'>\r\n            <h2 className='cart-heading'>Корзина</h2>\r\n            <table className='striped'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Наименование товара и описание</th>\r\n                        <th>Количество</th>\r\n                        <th>Цена</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        cart.map(cartItem => <CartItem item={cartItem} key={cartItem.name} />)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <p className='total-sum'>Общая стоимость: {calculateSum().toFixed(1)} руб.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;\r\n","import React from 'react';\nimport Goods from './Goods';\nimport Cart from './Cart';\nimport { CartProvider } from './contexts/CartContext';\nimport { GoodsProvider } from './contexts/GoodsContext';\nimport { RateProvider } from './contexts/RateContext';\n\n\nfunction App() {\n\n  return (\n    <RateProvider>\n      <GoodsProvider>\n        <CartProvider>\n          <main className = 'main-container'>\n            <Goods />\n            <Cart />\n          </main>\n        </CartProvider>\n      </GoodsProvider>\n    </RateProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}